/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package com.example.demo.list;

import javax.annotation.Nullable;

/** LinkedList. */
public class LinkedList {
  @Nullable private Node head;

  /**
   * add.
   *
   * @param element element
   */
  public void add(String element) {
    var newNode = new Node(element);

    var it = tail(head);
    if (it == null) {
      head = newNode;
    } else {
      it.next = newNode;
    }
  }

  private static @Nullable Node tail(@Nullable Node head) {
    Node it;

    for (it = head; it != null && it.next != null; it = it.next) {}

    return it;
  }

  /**
   * remove.
   *
   * @param element element
   * @return result
   */
  public boolean remove(String element) {
    var result = false;
    Node previousIt = null;
    for (var it = head; it != null; previousIt = it, it = it.next) {
      if (0 == element.compareTo(it.data)) {
        result = true;
        unlink(previousIt, it);
        break;
      }
    }

    return result;
  }

  private void unlink(@Nullable Node previousIt, Node currentIt) {
    if (currentIt == head) {
      head = currentIt.next;
    } else if (previousIt != null) {
      previousIt.next = currentIt.next;
    }
  }

  /**
   * size.
   *
   * @return size
   */
  public int size() {
    var size = 0;

    for (Node it = head; it != null; ++size, it = it.next) {}

    return size;
  }

  /**
   * get.
   *
   * @param index index
   * @return data
   */
  public String get(int index) {
    var it = head;
    while (index > 0 && it != null) {
      it = it.next;
      index--;
    }

    if (it == null) {
      throw new IndexOutOfBoundsException("Index is out of range");
    }

    return it.data;
  }

  private static class Node {
    final String data;
    @Nullable Node next;

    Node(String data) {
      this.data = data;
    }
  }
}
